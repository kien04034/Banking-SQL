CREATE TYPE "phai_enum" AS ENUM (
  'Nam',
  'Nữ',
  'Khác'
);

CREATE TABLE "CaNhan" (
  "uid" SERIAL PRIMARY KEY,
  "CMND" VARCHAR(20) UNIQUE NOT NULL,
  "DC" VARCHAR(255) NOT NULL,
  "Ho" VARCHAR(50) NOT NULL,
  "Ten" VARCHAR(50) NOT NULL,
  "phaiid" phai_enum,
  "SoDT" VARCHAR(15) UNIQUE NOT NULL
);

CREATE TABLE "KhachHang" (
  "uid" INT,
  "MaKH" VARCHAR(20) PRIMARY KEY
);

CREATE TABLE "ChiNhanh" (
  "MaCN" SERIAL PRIMARY KEY,
  "DiaChi" VARCHAR(255) NOT NULL,
  "TenCN" VARCHAR(100) NOT NULL
);

CREATE TABLE "VaiTro" (
  "VaiTroid" SERIAL PRIMARY KEY,
  "TenVaiTro" VARCHAR(30) NOT NULL
);

CREATE TABLE "NhanVien" (
  "MaCN" INT,
  "uid" INT,
  "VaiTroid" INT,
  "maNV" VARCHAR(20) PRIMARY KEY
);

CREATE TABLE "LoaiTaiKhoan" (
  "LoaiTKid" SERIAL PRIMARY KEY,
  "TenLoai" VARCHAR(20) NOT NULL
);

CREATE TABLE "TaiKhoan" (
  "SoTK" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "soDu" DECIMAL(15,2),
  "LaiSuat" DECIMAL(10,2),
  "ngaymoTK" DATE,
  "MaKH" VARCHAR(20),
  "LoaiTKid" INT
);

CREATE TABLE "LoaiGiaoDich" (
  "LoaiGDid" SERIAL PRIMARY KEY,
  "TenGiaoDich" VARCHAR(20) NOT NULL
);

CREATE TABLE "GiaoDich" (
  "MaGD" SERIAL PRIMARY KEY,
  "SoTK" INT,
  "SoTKNhan" INT,
  "SoTien" DECIMAL(15,2),
  "LoaiGDid" INT,
  "ngayGD" DATE
);

ALTER TABLE "KhachHang" ADD FOREIGN KEY ("uid") REFERENCES "CaNhan" ("uid");

ALTER TABLE "NhanVien" ADD FOREIGN KEY ("MaCN") REFERENCES "ChiNhanh" ("MaCN");

ALTER TABLE "NhanVien" ADD FOREIGN KEY ("uid") REFERENCES "CaNhan" ("uid");

ALTER TABLE "NhanVien" ADD FOREIGN KEY ("VaiTroid") REFERENCES "VaiTro" ("VaiTroid");

ALTER TABLE "TaiKhoan" ADD FOREIGN KEY ("MaKH") REFERENCES "KhachHang" ("MaKH");

ALTER TABLE "TaiKhoan" ADD FOREIGN KEY ("LoaiTKid") REFERENCES "LoaiTaiKhoan" ("LoaiTKid");

ALTER TABLE "GiaoDich" ADD FOREIGN KEY ("SoTK") REFERENCES "TaiKhoan" ("SoTK");

ALTER TABLE "GiaoDich" ADD FOREIGN KEY ("LoaiGDid") REFERENCES "LoaiGiaoDich" ("LoaiGDid");

ALTER TABLE "GiaoDich" ADD FOREIGN KEY ("SoTKNhan") REFERENCES "TaiKhoan" ("SoTK");


INSERT INTO "CaNhan" ("CMND", "DC", "Ho", "Ten", "phaiid", "SoDT") 
VALUES
    ('12345678', 'Hà Nội', 'Nguyễn', 'Văn An', 'Nam', '0912345671'),
    ('23456789', 'Hà Nội', 'Trần', 'Thị Hương', 'Nữ', '0987654322'),
    ('34567890', 'Thành phố Hồ Chí Minh', 'Lê', 'Hoàng Long', 'Khác', '0901234563'),
    ('45678901', 'Đà Nẵng', 'Nguyễn', 'Văn Anh', 'Nam', '0912345674'),
    ('56789012', 'Thành phố Hồ Chí Minh', 'Trần', 'Thị Hải', 'Nữ', '0987654325'),
    ('67890123', 'Thành phố Hồ Chí Minh', 'Lê', 'Hoàng Nam', 'Nam', '0901234566'),
    ('78901234', 'Thành phố Hồ Chí Minh', 'Nguyễn', 'Văn Bình', 'Nam', '0912345677'),
    ('89012345', 'Hà Nội', 'Trần', 'Thị Lan', 'Nữ', '0987654328'),
    ('90123456', 'Hà Nội', 'Lê', 'Hoàng Anh', 'Nữ', '0901234569'),
    ('01234567', 'Thành phố Hồ Chí Minh', 'Nguyễn', 'Văn Cường', 'Nam', '0912345670'),
    ('11234568', 'Thành phố Hồ Chí Minh', 'Trần', 'Thị Trang', 'Nữ', '0987654321'),
    ('12234569', 'Đà Nẵng', 'Lê', 'Hoàng Nam', 'Nam', '0901234562'),
    ('13234570', 'Cần Thơ', 'Nguyễn', 'Văn Hòa', 'Nam', '0912345673'),
    ('14234571', 'Thành phố Hồ Chí Minh', 'Trần', 'Thị Thơm', 'Nữ', '0987654324'),
    ('15234572', 'Đà Nẵng', 'Lê', 'Hoàng Linh', 'Nữ', '0901234565'),
    ('16234573', 'Thành phố Hồ Chí Minh', 'Nguyễn', 'Văn Đức', 'Nam', '0912345676'),
    ('17234574', 'Cần Thơ', 'Trần', 'Thị Mai', 'Nữ', '0987654327'),
    ('18234575', 'Đà Nẵng', 'Lê', 'Hoàng Long', 'Nam', '0901234568'),
    ('19234576', 'Đà Nẵng', 'Nguyễn', 'Văn Anh', 'Nữ', '0912345679'),
    ('20234577', 'Thành phố Hồ Chí Minh', 'Trần', 'Thị Hương', 'Nam', '0987654320'),
    ('21234578', 'Thành phố Hồ Chí Minh', 'Lê', 'Hoàng An', 'Nam', '0901234561'),
    ('22234579', 'Thành phố Hồ Chí Minh', 'Nguyễn', 'Văn Hùng', 'Nam', '0912345672'),
    ('23234580', 'Hải Phòng', 'Trần', 'Thị Hồng', 'Nữ', '0987654323'),
    ('24234581', 'Thành phố Hồ Chí Minh', 'Lê', 'Hoàng Giang', 'Nam', '0901234564'),
    ('25234582', 'Hà Nội', 'Nguyễn', 'Văn Hải', 'Nam', '0912345675'),
    ('26234583', 'Thành phố Hồ Chí Minh', 'Trần', 'Thị Trà', 'Nữ', '0987654326'),
    ('27234584', 'Hải Phòng', 'Lê', 'Hoàng Việt', 'Nam', '0901234567'),
    ('28234585', 'Thành phố Hồ Chí Minh', 'Nguyễn', 'Văn Linh', 'Nam', '0912345678'),
    ('29234586', 'Đà Nẵng', 'Trần', 'Thị Thanh', 'Nữ', '0987654329'),
    ('30234587', 'Thành phố Hồ Chí Minh', 'Lê', 'Hoàng Phúc', 'Nam', '0901234560');


INSERT INTO "ChiNhanh" ("DiaChi", "TenCN") 
VALUES
    ('Số 10, Đường Lý Thường Kiệt, Quận Hoàn Kiếm, Hà Nội', 'Chi nhánh Hà Nội 1'),
    ('Số 20, Đường Nguyễn Huệ, Quận 1, Thành phố Hồ Chí Minh', 'Chi nhánh TP. Hồ Chí Minh 1'),
    ('Số 30, Đường Bạch Đằng, Quận Hải Châu, Đà Nẵng', 'Chi nhánh Đà Nẵng 1'),
    ('Số 40, Đường Hùng Vương, Quận Ninh Kiều, Cần Thơ', 'Chi nhánh Cần Thơ 1'),
    ('Số 50, Đường Lê Lợi, Quận Thanh Khê, Đà Nẵng', 'Chi nhánh Đà Nẵng 2');


INSERT INTO "VaiTro" ("TenVaiTro")
VALUES
    ('Quản trị viên hệ thống'),
    ('Nhân viên ngân hàng');


INSERT INTO "LoaiGiaoDich" ("TenGiaoDich")
VALUES
    ('Chuyển tiền'),
    ('Rút tiền'),
    ('Gửi tiền');


INSERT INTO "LoaiTaiKhoan" ("TenLoai")
VALUES
    ('Tài khoản ngắn hạn'),
    ('Tài khoản tiết kiệm');


-- Quản trị viên hệ thống
INSERT INTO "NhanVien" ("MaCN", "uid", "VaiTroid", "maNV")
VALUES
    (1, 1, 1, 'QTV001');

-- Nhân viên ngân hàng
INSERT INTO "NhanVien" ("MaCN", "uid", "VaiTroid", "maNV")
VALUES
    (2, 2, 2, 'NV002'),
    (2, 3, 2, 'NV003'),
    (3, 4, 2, 'NV004'),
    (3, 5, 2, 'NV005'),
    (4, 6, 2, 'NV006'),
    (5, 7, 2, 'NV007');

INSERT INTO "KhachHang" ("uid", "MaKH")
VALUES
    (8, 'KH001'),
    (9, 'KH002'),
    (10, 'KH003'),
    (11, 'KH004'),
    (12, 'KH005'),
    (13, 'KH006'),
    (14, 'KH007'),
    (15, 'KH008'),
    (16, 'KH009'),
    (17, 'KH010'),
    (18, 'KH011'),
    (19, 'KH012'),
    (20, 'KH013'),
    (21, 'KH014'),
    (22, 'KH015'),
    (23, 'KH016'),
    (24, 'KH017'),
    (25, 'KH018'),
    (26, 'KH019'),
    (27, 'KH020'),
    (28, 'KH021'),
    (29, 'KH022'),
    (30, 'KH023');

INSERT INTO "TaiKhoan" ("SoTK", "soDu", "LaiSuat", "ngaymoTK", "MaKH", "LoaiTKid")
VALUES
    (123456789, 5000000.00, 0, '2023-06-01', 'KH001', 1),
    (234567890, 8000000.00, 0, '2023-06-02', 'KH002', 1),
    (345678901, 10000000.00, 0, '2023-06-03', 'KH003', 1),
    (456789012, 15000000.00, 0.07, '2023-06-04', 'KH004', 2),
    (567890123, 20000000.00, 0.07, '2023-06-05', 'KH005', 2),
    (678901234, 30000000.00, 0.07, '2023-06-06', 'KH006', 2),
    (789012345, 50000000.00, 0, '2023-06-07', 'KH007', 1),
    (890123456, 70000000.00, 0, '2023-06-08', 'KH008', 1),
    (901234567, 100000000.00, 0.07, '2023-06-09', 'KH009', 2),
    (109876543, 150000000.00, 0.07, '2023-06-10', 'KH010', 2),
    (123098765, 200000000.00, 0.07, '2023-06-11', 'KH011', 2),
    (134567890, 300000000.00, 0, '2023-06-12', 'KH012', 1),
    (145678901, 500000000.00, 0, '2023-06-13', 'KH013', 1),
    (156789012, 1000000000.00, 0.07, '2023-06-14', 'KH014', 2),
    (167890123, 2000000000.00, 0.07, '2023-06-15', 'KH015', 2),
    (178901234, 5000000000.00, 0, '2023-06-16', 'KH016', 1),
    (189012345, 10000000000.00, 0, '2023-06-17', 'KH017', 1),
    (190123456, 20000000000.00, 0.07, '2023-06-18', 'KH018', 2),
    (201234567, 50000000000.00, 0.07, '2023-06-19', 'KH019', 2),
    (212345678, 100000000000.00, 0.07, '2023-06-20', 'KH020', 2),
    (223456789, 200000000000.00, 0, '2023-06-21', 'KH021', 1),
    (234567891, 500000000000.00, 0, '2023-06-22', 'KH022', 1),
    (245678903, 1000000000000.00, 0.07, '2023-06-23', 'KH023', 2),
    (100000001, 5000000.00, 0, '2023-06-01', 'KH001', 1),
    (100000002, 8000000.00, 0, '2023-06-02', 'KH002', 1),
    (100000003, 10000000.00, 0, '2023-06-03', 'KH003', 1),
    (100000004, 15000000.00, 0, '2023-06-04', 'KH004', 1),
    (100000005, 20000000.00, 0, '2023-06-05', 'KH005', 1),
    (100000006, 30000000.00, 0, '2023-06-06', 'KH006', 1),
    (100000007, 50000000.00, 0, '2023-06-07', 'KH007', 1),
    (100000008, 70000000.00, 0, '2023-06-08', 'KH008', 1),
    (100000009, 100000000.00, 0, '2023-06-09', 'KH009', 1),
    (100000010, 150000000.00, 0, '2023-06-10', 'KH010', 1),
    (100000011, 200000000.00, 0, '2023-06-11', 'KH011', 1),
    (100000012, 300000000.00, 0, '2023-06-12', 'KH012', 1),
    (100000013, 500000000.00, 0, '2023-06-13', 'KH013', 1),
    (100000014, 1000000000.00, 0, '2023-06-14', 'KH014', 1),
    (100000015, 2000000000.00, 0, '2023-06-15', 'KH015', 1),
    (100000016, 5000000000.00, 0, '2023-06-16', 'KH016', 1),
    (100000017, 10000000000.00, 0, '2023-06-17', 'KH017', 1),
    (100000018, 20000000000.00, 0, '2023-06-18', 'KH018', 1),
    (100000019, 50000000000.00, 0, '2023-06-19', 'KH019', 1),
    (100000020, 1000000000.00, 0, '2023-06-20', 'KH020', 1),
    (100000021, 20000000.00, 0, '2023-06-21', 'KH021', 1),
    (100000022, 5000000.00, 0, '2023-06-22', 'KH022', 1),
    (100000023, 100000000.00, 0, '2023-06-23', 'KH023', 1);
   
INSERT INTO "GiaoDich" ("SoTK", "SoTKNhan", "SoTien", "LoaiGDid", "ngayGD")
VALUES
    (123456789, 234567890, 500000.00, 1, '2023-06-02'),
    (234567890, NULL, 800000.00, 2, '2023-06-03'),
    (345678901, NULL, 100000.00, 3, '2023-06-04'),
    (456789012, 567890123, 15000.00, 1, '2023-06-05'),
    (567890123, NULL, 2000000.00, 2, '2023-06-06'),
    (678901234, NULL, 3000000.00, 3, '2023-06-07'),
    (789012345, 890123456, 500000.00, 1, '2023-06-08'),
    (890123456, NULL, 7000000.00, 2, '2023-06-09'),
    (901234567, NULL, 10000000.00, 3, '2023-06-10'),
    (109876543, 123098765, 150000.00, 1, '2023-06-11'),
    (123098765, NULL, 200000.00, 2, '2023-06-12'),
    
    (134567890, NULL, 30000000.00, 3, '2023-06-13'),
    (145678901, 156789012, 50000.00, 1, '2023-06-14'),
    (156789012, NULL, 1000000.00, 2, '2023-06-15'),
    (167890123, NULL, 200000.00, 3, '2023-06-16'),
    (178901234, 189012345, 50000.00, 1, '2023-06-17'),
    (189012345, NULL, 10000000.00, 2, '2023-06-18'),
    (190123456, NULL, 2000000.00, 3, '2023-06-19'),
    (201234567, 212345678, 500000.00, 1, '2023-06-20'),
    (212345678, NULL, 1000000.00, 2, '2023-06-21'),
    (223456789, NULL, 2000000.00, 3, '2023-06-22'),
    (234567891, 100000001, 50000.00, 1, '2023-06-23'),
    (100000001, NULL, 8000000.00, 2, '2023-06-24'),
    (100000002, NULL, 10000.00, 3, '2023-06-25'),
    (100000003, 100000004, 15000000.00, 1, '2023-06-26'),
    (100000004, NULL, 20000000.00, 2, '2023-06-27'),
    (100000005, NULL, 30000000.00, 3, '2023-06-28'),
    (100000006, 100000007, 500000.00, 1, '2023-06-29'),
    (100000007, NULL, 700000.00, 2, '2023-06-30'),
	  (100000008, NULL, 100000000.00, 3, '2023-07-01'),
    (100000009, 100000010, 15000000.00, 1, '2023-07-02'),
    (100000010, NULL, 200000000.00, 2, '2023-07-03'),
    (100000011, NULL, 300000000.00, 3, '2023-07-04'),
    (100000012, 100000013, 5000000.00, 1, '2023-07-05'),
    (100000013, NULL, 1000000000.00, 2, '2023-07-06'),
    (100000014, NULL, 2000000000.00, 3, '2023-07-07'),
    (100000015, 100000016, 500000000.00, 1, '2023-07-08'),
    (100000016, NULL, 10000000000.00, 2, '2023-07-09'),
    (100000017, NULL, 20000000000.00, 3, '2023-07-10'),
    (100000018, 100000019, 500000000.00, 1, '2023-07-11'),
    (100000019, NULL, 100000000000.00, 2, '2023-07-12'),
    (100000020, NULL, 200000000000.00, 3, '2023-07-13'),
    (100000021, 100000022, 5000000.00, 1, '2023-07-14'),
    (100000022, NULL, 1000000000000.00, 2, '2023-07-15'),
    (100000023, NULL, 200000000.00, 3, '2023-07-16'),
    (178901234, NULL, 50000000.00, 3, '2023-07-17'),
    (189012345, 190123456, 1000000.00, 1, '2023-07-18'),
    (190123456, NULL, 20000000.00, 2, '2023-07-19'),
    (201234567, 212345678, 500000.00, 1, '2023-07-20'),
    (212345678, NULL, 1000000.00, 2, '2023-07-21'),
    (223456789, NULL, 2000000.00, 3, '2023-07-22'),
    (234567891, 100000001, 50000.00, 1, '2023-07-23'),
    (100000001, NULL, 8000000.00, 2, '2023-07-24'),
    (100000002, NULL, 10000.00, 3, '2023-07-25'),
    (100000003, 100000004, 150000.00, 1, '2023-07-26'),
    (100000004, NULL, 200000.00, 2, '2023-07-27'),
    (100000005, NULL, 30000000.00, 3, '2023-07-28'),
    (100000006, 100000007, 500000.00, 1, '2023-07-29'),
    (100000007, NULL, 700000.00, 2, '2023-07-30'),
    (100000008, NULL, 100000.00, 3, '2023-07-31');

CREATE OR REPLACE PROCEDURE ChuyenNhanVien(
    p_maNV VARCHAR(20),    -- Mã nhân viên của nhân viên cần chuyển
    p_maCN_cu INT,         -- Mã chi nhánh cũ của nhân viên
    p_maCN_moi INT         -- Mã chi nhánh mới của nhân viên
)
LANGUAGE plpgsql
AS $$
BEGIN
    UPDATE "NhanVien"
    SET "MaCN" = p_maCN_moi
    WHERE "maNV" = p_maNV AND "MaCN" = p_maCN_cu;

    IF NOT FOUND THEN
        RAISE EXCEPTION 'Không tìm thấy nhân viên với maNV: %, maCN: %', p_maNV, p_maCN_cu;
    END IF;
EXCEPTION
    WHEN OTHERS THEN
        RAISE EXCEPTION 'Có lỗi xảy ra khi chuyển nhân viên: %', SQLERRM;
END;
$$;

CREATE OR REPLACE PROCEDURE ChuyenBoPhan(
    p_maNV VARCHAR(20),            -- Mã nhân viên của nhân viên cần chuyển
    p_maBoPhan_cu VARCHAR(20),     -- Mã bộ phận cũ của nhân viên
    p_maBoPhan_moi VARCHAR(20)     -- Mã bộ phận mới của nhân viên
)
LANGUAGE plpgsql
AS $$
BEGIN
    UPDATE "NhanVien"
    SET "maNV" = p_maBoPhan_moi
    WHERE "maNV" = p_maNV AND "maNV" = p_maBoPhan_cu;

    IF NOT FOUND THEN
        RAISE EXCEPTION 'Không tìm thấy nhân viên với maNV: %, mã bộ phận: %', p_maNV, p_maBoPhan_cu;
    END IF;
EXCEPTION
    WHEN OTHERS THEN
        RAISE EXCEPTION 'Có lỗi xảy ra khi chuyển bộ phận: %', SQLERRM;
END;
$$;
CREATE OR REPLACE FUNCTION update_interest()
RETURNS TRIGGER
LANGUAGE plpgsql
AS $$
DECLARE
    v_ngay_dao_han DATE;
BEGIN
    -- Lấy ngày đáo hạn
    SELECT "ngaymoTK" + INTERVAL '1 month' * "Kihan" INTO v_ngay_dao_han
    FROM "TaiKhoan"
    WHERE "SoTK" = NEW."SoTK";

    -- Nếu giao dịch là rút tiền trước kỳ hạn và loại tài khoản là 2
    IF NEW."LoaiGDid" = 2 AND NEW."ngayGD" < v_ngay_dao_han THEN
        -- Cập nhật lãi suất về 0
        UPDATE "TaiKhoan"
        SET "LaiSuat" = 0
        WHERE "TaiKhoan"."SoTK" = NEW."SoTK";
    END IF;

    RETURN NEW;
END;
$$;

CREATE TRIGGER CapNhatLaiSuat
AFTER INSERT ON "GiaoDich"
FOR EACH ROW
EXECUTE FUNCTION update_interest();

BEGIN
    -- Cập nhật số dư cho các tài khoản có lãi suất > 0 và đến kỳ hạn
    UPDATE "TaiKhoan"
    SET "soDu" = "soDu" * POWER((1 + "LaiSuat" / 100), "KiHan"),
        "ngaymoTK" = "ngaymoTK" + INTERVAL '1 month' * "KiHan"
    WHERE "LaiSuat" > 0
      AND CURRENT_DATE = "ngaymoTK" + INTERVAL '1 month' * "KiHan";
END;

CREATE OR REPLACE PROCEDURE CapNhatSoDuTK2()
LANGUAGE plpgsql
AS $$
BEGIN
    -- Áp dụng phí duy trì cho tài khoản loại 2
    UPDATE "TaiKhoan"
    SET "soDu" = CASE
                    WHEN "soDu" < 50000 THEN 0
                    WHEN "soDu" < 1000000 THEN "soDu" - 50000
                    ELSE "soDu"
                 END
    WHERE "LoaiTKid" = 2
      AND date_part('day', CURRENT_DATE) = date_part('day', "ngaymoTK")
      AND date_part('month', age(CURRENT_DATE, "ngaymoTK")) > 0;
END;
$$;


CREATE OR REPLACE PROCEDURE GuiTien(
    p_SoTK INT,
    p_SoTien DECIMAL
)
LANGUAGE plpgsql
AS $$
DECLARE
    v_LoaiTK INT;
    v_TongTienTrongNgay DECIMAL;
BEGIN
    -- Lấy thông tin loại tài khoản
    SELECT "LoaiTKid"
    INTO v_LoaiTK
    FROM "TaiKhoan"
    WHERE "SoTK" = p_SoTK;

    -- Kiểm tra loại tài khoản
    IF v_LoaiTK = 1 THEN
        -- Kiểm tra tổng số tiền trong ngày
        SELECT SUM("SoTien")
        INTO v_TongTienTrongNgay
        FROM "GiaoDich"
        WHERE "SoTK" = p_SoTK
          AND DATE("ngayGD") = CURRENT_DATE;

        IF p_SoTien >= 1000 AND p_SoTien <= 200000000 AND v_TongTienTrongNgay + p_SoTien <= 500000000 THEN
            -- Thực hiện giao dịch gửi tiền
            INSERT INTO "GiaoDich" ("SoTK", "SoTien", "LoaiGDid", "ngayGD")
            VALUES (p_SoTK, p_SoTien, 3, CURRENT_TIMESTAMP);

            -- Cập nhật số dư của tài khoản
            UPDATE "TaiKhoan"
            SET "soDu" = "soDu" + p_SoTien
            WHERE "SoTK" = p_SoTK;
        ELSE
            RAISE EXCEPTION 'Số tiền gửi không hợp lệ hoặc vượt quá giới hạn ngày';
        END IF;
    ELSE
        RAISE EXCEPTION 'Không hỗ trợ loại tài khoản này';
    END IF;
END;
$$;

CREATE OR REPLACE PROCEDURE RutTien(
    p_SoTK INT,
    p_SoTien DECIMAL
)
LANGUAGE plpgsql
AS $$
DECLARE
    v_SoDu DECIMAL;
BEGIN
    -- Lấy số dư hiện tại của tài khoản
    SELECT "soDu"
    INTO v_SoDu
    FROM "TaiKhoan"
    WHERE "SoTK" = p_SoTK;

    -- Kiểm tra số tiền rút hợp lệ
    IF p_SoTien > 0 AND p_SoTien <= v_SoDu THEN
        -- Thực hiện giao dịch rút tiền
        INSERT INTO "GiaoDich" ("SoTK", "SoTien", "LoaiGDid", "ngayGD")
        VALUES (p_SoTK, -p_SoTien, 1, CURRENT_TIMESTAMP);

        -- Cập nhật số dư của tài khoản
        UPDATE "TaiKhoan"
        SET "soDu" = "soDu" - p_SoTien
        WHERE "SoTK" = p_SoTK;
    ELSE
        RAISE EXCEPTION 'Số tiền rút không hợp lệ hoặc vượt quá số dư';
    END IF;
END;
$$; 
CREATE OR REPLACE PROCEDURE ChuyenKhoan(
    p_SoTKGui INT,
    p_SoTKNhan INT,
    p_SoTien DECIMAL
)
LANGUAGE plpgsql
AS $$
DECLARE
    v_SoDuGui DECIMAL;
BEGIN
    -- Lấy số dư hiện tại của tài khoản gửi
    SELECT "soDu" INTO v_SoDuGui
    FROM "TaiKhoan"
    WHERE "SoTK" = p_SoTKGui;
    
    -- Kiểm tra số tiền chuyển hợp lệ
    IF p_SoTien > 0 AND p_SoTien <= v_SoDuGui THEN
        -- Thực hiện giao dịch chuyển tiền
        INSERT INTO "GiaoDich" ("SoTK", "SoTKNhan", "SoTien", "LoaiGDid", "ngayGD")
        VALUES (p_SoTKGui, p_SoTKNhan, p_SoTien, 1, CURRENT_TIMESTAMP);

        -- Cập nhật số dư của tài khoản gửi và tài khoản nhận
        UPDATE "TaiKhoan"
        SET "soDu" = "soDu" - p_SoTien
        WHERE "SoTK" = p_SoTKGui;
        
        UPDATE "TaiKhoan"
        SET "soDu" = "soDu" + p_SoTien
        WHERE "SoTK" = p_SoTKNhan;
    ELSE
        RAISE EXCEPTION 'Số tiền chuyển không hợp lệ hoặc vượt quá số dư';
    END IF;
END;
$$;
CREATE OR REPLACE PROCEDURE XoaTaiKhoanVaGiaoDich(SoTKToDelete INT)
LANGUAGE plpgsql
AS $$
DECLARE
    v_so_du DECIMAL(15,2);
BEGIN
    -- Kiểm tra số dư của tài khoản
    SELECT "soDu" INTO v_so_du
    FROM "TaiKhoan"
    WHERE "SoTK" = SoTKToDelete;

    -- Nếu số dư bằng 0, thì mới thực hiện xóa
    IF v_so_du = 0 THEN
        -- Xóa các giao dịch liên quan đến tài khoản
        DELETE FROM "GiaoDich"
        WHERE "SoTK" = SoTKToDelete;

        -- Xóa tài khoản
        DELETE FROM "TaiKhoan"
        WHERE "SoTK" = SoTKToDelete;

        RAISE NOTICE 'Đã xóa tài khoản và các giao dịch liên quan thành công.';
    ELSE
        RAISE EXCEPTION 'Không thể xóa tài khoản với số dư khác 0.';
    END IF;
END $$;